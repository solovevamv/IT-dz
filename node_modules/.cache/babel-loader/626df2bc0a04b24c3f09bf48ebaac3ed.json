{"ast":null,"code":"var _jsxFileName = \"/Users/antontintul/WebstormProjects/burkov-dz/src/Select/index.js\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Select = props => {\n  const options = props.options;\n  const placeholder = props.placeholder;\n  const onChange = props.onChange;\n  const title = props.title;\n  let defaultValue = props.value;\n\n  if (!defaultValue) {\n    defaultValue = '-1';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Select-Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"Select\",\n      defaultValue: defaultValue,\n      size: \"1\",\n      onChange: onChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: '-1',\n        disabled: true,\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), options.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/Users/antontintul/WebstormProjects/burkov-dz/src/Select/index.js"],"names":["Select","props","options","placeholder","onChange","title","defaultValue","value","map","index"],"mappings":";AAAA,OAAO,aAAP;;;AAEA,OAAO,MAAMA,MAAM,GAAIC,KAAD,IAAW;AAC7B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACE,WAA1B;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACI,KAApB;AAEA,MAAIC,YAAY,GAAGL,KAAK,CAACM,KAAzB;;AACA,MAAI,CAACD,YAAL,EAAmB;AACfA,IAAAA,YAAY,GAAG,IAAf;AACH;;AACD,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,YAAY,EAAEA,YAAzC;AAAuD,MAAA,IAAI,EAAC,GAA5D;AAAgE,MAAA,QAAQ,EAAEF,QAA1E;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAE,IAAf;AAAqB,QAAA,QAAQ,MAA7B;AAAA,kBAA+BD;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMD,OAAO,CAACM,GAAR,CAAa,CAACD,KAAD,EAAQE,KAAR,KAAkB;AAC7B,4BACI;AAAoB,UAAA,KAAK,EAAEA,KAA3B;AAAA,oBAAmCF;AAAnC,WAAaE,KAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJC,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAaH,CAvBM;KAAMT,M","sourcesContent":["import './index.css';\n\nexport const Select = (props) => {\n    const options = props.options;\n    const placeholder = props.placeholder;\n    const onChange = props.onChange;\n    const title = props.title;\n\n    let defaultValue = props.value;\n    if (!defaultValue) {\n        defaultValue = '-1';\n    }\n    return (\n        <>\n            <div className={\"Select-Title\"}></div>\n            <select className=\"Select\" defaultValue={defaultValue} size=\"1\" onChange={onChange}>\n                <option value={'-1'} disabled>{placeholder}</option>\n                { options.map( (value, index) => {\n                    return (\n                        <option key={index} value={index}>{value}</option>\n                    );\n                } ) }\n            </select>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}