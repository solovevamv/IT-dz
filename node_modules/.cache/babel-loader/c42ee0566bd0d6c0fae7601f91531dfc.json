{"ast":null,"code":"var _jsxFileName = \"/Users/antontintul/WebstormProjects/burkov-dz/src/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport { Input } from \"../Input\";\nimport { useState } from \"react\";\nimport { Select } from \"../Select\";\nimport { Button } from \"../Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = props => {\n  _s();\n\n  const {\n    list,\n    setList,\n    options,\n    type,\n    action\n  } = props;\n  const [name, setName] = useState('');\n  const [selectedManager, setSelectedManager] = useState('');\n  const [reason, setReason] = useState('');\n\n  const onChangeSelect = event => {\n    setSelectedManager(event.target.value);\n  };\n\n  const onChangeReason = event => {\n    setReason(event.target.value);\n  };\n\n  const onChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const onSubmitAddForm = event => {\n    event.preventDefault();\n\n    if (type === \"clients\") {\n      if (!name || !selectedManager || !reason) {\n        return;\n      }\n    } else {\n      if (!name) {\n        return;\n      }\n    }\n\n    const array = list.map(value => {\n      return value;\n    });\n    array.push({\n      managerId: Number(selectedManager),\n      firstName: name,\n      description: reason\n    });\n    setList(array);\n    setName('');\n    setSelectedManager('');\n    setReason('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitAddForm,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      title: \"Имя\",\n      value: name,\n      onChange: onChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), type === 'clients' && /*#__PURE__*/_jsxDEV(Input, {\n      value: reason,\n      title: \"Причина звонка\",\n      onChange: onChangeReason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), type === 'clients' && /*#__PURE__*/_jsxDEV(Select, {\n      title: \"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440 \\u0434\\u043B\\u044F \\u043E\\u0431\\u0437\\u0432\\u043E\\u043D\\u0430\",\n      value: selectedManager,\n      options: options.map(value => {\n        return value.firstName;\n      }),\n      placeholder: \"Выбери имя\",\n      onChange: onChangeSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: 'Form-Submit',\n      submit: true,\n      type: \"action\",\n      children: action === 'change' ? 'Изменить' : 'Добавить'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"hcoROpokFj0bXl66pQ8I+yXBzIM=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/antontintul/WebstormProjects/burkov-dz/src/Form/index.js"],"names":["Input","useState","Select","Button","Form","props","list","setList","options","type","action","name","setName","selectedManager","setSelectedManager","reason","setReason","onChangeSelect","event","target","value","onChangeReason","onChangeName","onSubmitAddForm","preventDefault","array","map","push","managerId","Number","firstName","description"],"mappings":"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","sourcesContent":["import './index.css';\nimport {Input} from \"../Input\";\nimport {useState} from \"react\";\nimport {Select} from \"../Select\";\nimport {Button} from \"../Button\";\n\nexport const Form = (props) => {\n    const {\n        list,\n        setList,\n        options,\n        type,\n        action\n    } = props;\n    const [name, setName] = useState('');\n    const [selectedManager, setSelectedManager] = useState('');\n    const [reason, setReason] = useState('');\n\n    const onChangeSelect = (event) => {\n        setSelectedManager(event.target.value);\n    };\n\n    const onChangeReason = (event) => {\n        setReason(event.target.value);\n    };\n\n    const onChangeName = (event) => {\n        setName(event.target.value);\n    }\n\n    const onSubmitAddForm = (event) => {\n        event.preventDefault();\n        if (type === \"clients\") {\n            if (!name || !selectedManager || !reason) {\n                return;\n            }\n        } else {\n            if (!name) {\n                return;\n            }\n        }\n        const array = list.map((value) => {\n            return value;\n        });\n\n        array.push({\n            managerId: Number(selectedManager),\n            firstName: name,\n            description: reason,\n        });\n\n        setList(array);\n        setName('');\n        setSelectedManager('');\n        setReason('');\n    };\n\n    return (\n        <form onSubmit={onSubmitAddForm}>\n            <Input\n                title={\"Имя\"}\n                value={name}\n                onChange={onChangeName}\n            />\n            { type === 'clients' && (\n                <Input\n                    value={reason}\n                    title={\"Причина звонка\"}\n                    onChange={onChangeReason}\n                />\n            )}\n            { type === 'clients' && (\n                <Select\n                    title=\"Менеджер для обзвона\"\n                    value={selectedManager}\n                    options={options.map((value) => {\n                        return value.firstName;\n                    })}\n                    placeholder={\"Выбери имя\"}\n                    onChange={onChangeSelect}\n                />\n            )}\n            <Button className={'Form-Submit'} submit={true} type=\"action\">{(action === 'change') ? 'Изменить' : 'Добавить'}</Button>\n        </form>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}